version: '3.13'

services:
  backend:
    build:
      context: ./backend # Relative to this docker-compose.yml file
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app # Mounts the host's backend directory to /app in the container
    environment:
      - MONGO_URL=mongodb://mongo:27017/bot_club_db # Added a database name
      - REDIS_URL=redis://redis:6379/0
      - LOCAL_DB=true
      - MONGO_DB_NAME=bot_club_db
      - NODE_ENV=development
      - BACKEND_SERVICES_URL=http://backend_services:8001
    depends_on:
      - mongo
      - redis
      - backend_services
    restart: unless-stopped

  backend_services:
    build:
      context: ./backend_services # Relative to this docker-compose.yml file
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend_services:/app 
    env_file:
      - ./.env
      # Mounts the host's backend_services directory to /app in the container
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB=bot_club_db
      - REDIS_URL=redis://redis:6379/0
      - LOCAL_DB=true
      - NODE_ENV=development
      - SERVICE_PORT=8001
      - API_SERVICE_URL=http://backend:8000
    depends_on:
      - mongo
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend # Relative to this docker-compose.yml file
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app # Mounts the host's frontend directory to /app in the container
      - /app/node_modules # Preserves node_modules installed in the image
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  mongo:
    image: mongo:6.0 # Using a specific version is good practice
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=bot_club_db
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  
volumes:
  mongo_data: {}
  redis_data: {}